package main

import (
	"context"
	"log"
	"net/http"
	"sync"

	"connectrpc.com/connect"
	"golang.org/x/net/http2"
	"golang.org/x/net/http2/h2c"

	usersv1 "github.com/az5840/connect-go-example/gen/users/v1" // generated by protoc-gen-go
	"github.com/az5840/connect-go-example/gen/users/v1/usersv1connect"
	// generated by protoc-gen-connect-go
)

type UsersService struct {
	usersv1connect.UnimplementedUsersServiceHandler
	savedPersons []*usersv1.GetUserResponse // read-only after initialized
	mu           sync.Mutex                 // protects users
}

func newUsersServer() *UsersService {
	return &UsersService{
		savedPersons: exampleData,
	}
}
func (u *UsersService) GetUser(ctx context.Context, req *connect.Request[usersv1.GetUserRequest]) (*connect.Response[usersv1.GetUserResponse], error) {
	log.Println("Request headers: ", req.Header())
	var user usersv1.GetUserResponse
	u.mu.Lock()
	user = *u.savedPersons[req.Msg.Id]
	u.mu.Unlock()
	res := connect.NewResponse(&user)
	res.Header().Set("Users-Version", "v1")
	return res, nil
}

func main() {
	usersservice := &UsersService{
		savedPersons: exampleData,
	}
	mux := http.NewServeMux()
	path, handler := usersv1connect.NewUsersServiceHandler(usersservice.UnimplementedUsersServiceHandler)
	mux.Handle(path, handler)
	if err := http.ListenAndServe(
		"localhost:8080",
		// Use h2c so we can serve HTTP/2 without TLS.
		h2c.NewHandler(mux, &http2.Server{}),
	); err != nil {
		log.Fatalf("Start server failed whith err:%v", err)
	}

}

var exampleData = []*usersv1.GetUserResponse{
	{Name: "Juan", Id: 1, Age: 52, Status: usersv1.UserStatus_USER_STATUS_AVAILABLE},
	{Name: "Gabriel", Id: 2, Age: 52, Status: usersv1.UserStatus_USER_STATUS_AVAILABLE},
	{Name: "Albert", Id: 3, Age: 52, Status: usersv1.UserStatus_USER_STATUS_AVAILABLE},
	{Name: "Mark", Id: 4, Age: 52, Status: usersv1.UserStatus_USER_STATUS_AVAILABLE},
	{Name: "Brian", Id: 5, Age: 52, Status: usersv1.UserStatus_USER_STATUS_AVAILABLE},
	{Name: "Kevin", Id: 6, Age: 52, Status: usersv1.UserStatus_USER_STATUS_AVAILABLE},
	{Name: "Ryan", Id: 7, Age: 52, Status: usersv1.UserStatus_USER_STATUS_AVAILABLE},
	{Name: "May", Id: 8, Age: 52, Status: usersv1.UserStatus_USER_STATUS_AVAILABLE},
	{Name: "Rosario", Id: 9, Age: 52, Status: usersv1.UserStatus_USER_STATUS_AVAILABLE},
	{Name: "Argentina", Id: 10, Age: 52, Status: usersv1.UserStatus_USER_STATUS_AVAILABLE},
}
